Функция ПолучитьВсеТранзакцииДоходов(ДанныеJSON)
	Массив = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТранзакцииДоходов.Счет КАК Счет,
	               |	ТранзакцииДоходов.Сумма КАК Сумма,
	               |	ТранзакцииДоходов.Описание КАК Описание
	               |ИЗ
	               |	Документ.ТранзакцииДоходов КАК ТранзакцииДоходов
	               |ГДЕ
	               |	ТранзакцииДоходов.ВладелецТранзакцииСумм = &ВладелецТранзакцииСумм"; 
	Запрос.УстановитьПараметр("ВладелецТранзакцииСумм",ДанныеJSON.userName);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		Данные = Новый Структура;
		Данные.Вставить("nameAccount", Строка(ВыборкаЗапроса.Счет));
		Данные.Вставить("sum", ВыборкаЗапроса.Сумма);
		Данные.Вставить("description", Строка(ВыборкаЗапроса.Описание));
		Массив.Добавить(Данные);
	КонецЦикла;                                     
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON,Массив);
	
	Возврат ЗаписьJSON.Закрыть();
КонецФункции

Функция allTransactionsGET(Запрос) 
	Попытка
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();   
		
		Ответ = Новый HTTPСервисОтвет(200);  
		Ответ.УстановитьТелоИзСтроки(ПолучитьВсеТранзакцииДоходов(ДанныеJSON));
	Исключение
		ОшибкаКода = ОписаниеОшибки();
		ЛогЗапросов = РегистрыСведений.ЛогGETЗапросов.СоздатьМенеджерЗаписи();
		ЛогЗапросов.Дата = ТекущаяДата();
		ЛогЗапросов.Запрос = Запрос.ПолучитьТелоКакСтроку();
		ЛогЗапросов.Заголовки = Ответ.Заголовки;
		ЛогЗапросов.КодСостояния = Ответ.КодСостояния;
		ЛогЗапросов.Ошибка = ОшибкаКода;
		ЛогЗапросов.Записать();
	КонецПопытки;
	Возврат Ответ;
КонецФункции

Функция ПолучитьВсеТранзакцииРасходов(ДанныеJSON)
	Массив = Новый Массив;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ТранзакцииРасходов.Счет КАК Счет,
	               |	ТранзакцииРасходов.Сумма КАК Сумма,
	               |	ТранзакцииРасходов.Описание КАК Описание
	               |ИЗ
	               |	Документ.ТранзакцииРасходов КАК ТранзакцииРасходов
	               |ГДЕ
	               |	ТранзакцииРасходов.ВладелецТранзакцииВыч = &ВладелецТранзакцииВыч"; 
	Запрос.УстановитьПараметр("ВладелецТранзакцииВыч", ДанныеJSON.userName);
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	Пока ВыборкаЗапроса.Следующий() Цикл
		Данные = Новый Структура;
		Данные.Вставить("nameAccount", Строка(ВыборкаЗапроса.Счет));
		Данные.Вставить("sum", ВыборкаЗапроса.Сумма);
		Данные.Вставить("description", Строка(ВыборкаЗапроса.Описание));
		Массив.Добавить(Данные);
	КонецЦикла;                                     
	
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON,Массив);
	
	Возврат ЗаписьJSON.Закрыть();
КонецФункции

Функция allTransactionsConsumptionGET(Запрос)
	Попытка
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.УстановитьСтроку(Запрос.ПолучитьТелоКакСтроку());
		ДанныеJSON = ПрочитатьJSON(ЧтениеJSON);
		ЧтениеJSON.Закрыть();   
		
		Ответ = Новый HTTPСервисОтвет(200);  
		Ответ.УстановитьТелоИзСтроки(ПолучитьВсеТранзакцииРасходов(ДанныеJSON));
	Исключение
		ОшибкаКода = ОписаниеОшибки();
		ЛогЗапросов = РегистрыСведений.ЛогGETЗапросов.СоздатьМенеджерЗаписи();
		ЛогЗапросов.Дата = ТекущаяДата();
		ЛогЗапросов.Запрос = Запрос.ПолучитьТелоКакСтроку();
		ЛогЗапросов.Заголовки = Ответ.Заголовки;
		ЛогЗапросов.КодСостояния = Ответ.КодСостояния;
		ЛогЗапросов.Ошибка = ОшибкаКода;
		ЛогЗапросов.Записать();
	КонецПопытки;
	Возврат Ответ;
КонецФункции
